Ansible is agentless, it does not require a client software before it can manage a host. 
Ansible can be used for
1. UsersMGT
2. FileMGT
3. ServicesMGT
4. PackagesMGT
Ansible is an open source configuration management, deployment tool and also for provisioning tools maintained by Redhat. 
It can manage more than 50 server  of dbserver, webservers and appserver at tthe same time 

Ansible installation in ubuntu
sudo addsuser ansible
echo "ansible ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/ansibe
sudo su - ansible
sudo apt-add-repository ppa:ansible/ansible
sudo apt install ansible -y

when you run ansible --version
You  will get the config file path= /etc/ansible/ansible.cfg
                   host file path= /etc/ansible/hosts
  Ansible concepts are:
1.  Ansible commands
         To check if serves are alive or not= ansible all -m ping ( if I want to check my dbserver is okay I will run ansible db -m ping)
         To check for memeory of the ansible server itself " ansible localhost -m command -a "free -m"
         To check in the webserver "ansible web -m command -a "df -h"
2. modueles
         ping = ansible all -m ping
         
         command=  ansible all -m command -a "ping"
         
         shell = ansible all -m shell -a "ping"
         
         service/systemd/systemctl/: ansible db -m service -a "name=ssd state=restarted"
                                     ansible db -m systemd -a "name=httpd state=absent"
                                     
         copy= ansible app -m copy -a "src=/home/ansible/app.war dest=/opt/tomcat/webapps/"
               ansible web -m copy -a "src=/home/ansible/index.html dest=/var/www/html/"
               
         yum/apt/package = ansible app -m yum -a "name=httpd state=present"
                           ansible app -m yum -a "name=httpd state=absent"
         run a"nsible-doc -i" to see all ansible modules 
         
3. Playbooks: it is configuration script written in yml. It contain plays and tasks those tasks will be executed in the hosts
you can vi into a yaml file and write a playbook
After you done you can check if the playbook you wrote is good by running " ansible-playbook apache.yml(name of the file you vi into) --syntax-check
if something was wrong with it you get an "error" message
To run the palybook use the command "ansible-playbook apache.yml(name of the file you vi into)"

4. Roles
5. Loops
6. Condition
7. Variable
How to Create Inventory file
IP Address ansible_user=ec2-user ansible_ssh_private_key_file=/tmp/ansible.pem
This is the way will write all our IP Address in the inventory file. if the instance you created is ubuntu then it will be ansible_user=ubuntu and make sure 
the key you will be using to created all the server will be the same
Change the permission of the file to ansible user using
run the command ls -l /etc/ansible/hosts to see who own the file
sudo chown ansible -R /etc/ansible/
Now vi into /etc/ansible/hosts

vi  /etc/ansible/ansible.cfg
You will see a link in there to see the full file on github
Copy the file and paste in the vi /etc/ansible/ansible.cfg
Now search for the host key to seach without pressing the the I for insert write (/host_key) at the bottom of the file
Uncomment the line with the host key by deleting the # (pounds) commands
Now when you run ansible db -m ping it won't ask for permission any more
You have to create the ansible key in the /tmp
vi into /tmp/ansible.pem and paste the key in there
change the permission of the key using "sudo chmod 400 /tmp/ansible.pem

Note to run any thing in ansible that need elevated right and permission at th end of the command just pass "-b"
